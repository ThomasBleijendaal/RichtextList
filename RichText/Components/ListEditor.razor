@if (State != null)
{
    <ul class="editor-level">
        @foreach (var element in State.Elements)
        {
            <li class="editor-node" @key="@element.Entity.Id">
                <div class="row">
                    <div class="col-1">
                        @if (element.State == ElementState.New)
                        {
                            <i class="ms-Icon ms-Icon--PageAdd" aria-hidden="true"></i>
                        }
                        else if (element.State == ElementState.Existing)
                        {
                            <i class="ms-Icon ms-Icon--Page" aria-hidden="true"></i>
                        }
                        else if (element.State == ElementState.Modified)
                        {
                            <i class="ms-Icon ms-Icon--PageEdit" aria-hidden="true"></i>
                        }
                        else if (element.State == ElementState.Saving)
                        {
                            <i class="ms-Icon ms-Icon--PageData" aria-hidden="true"></i>
                        }
                        else if (element.State == ElementState.Deleting)
                        {
                            <i class="ms-Icon ms-Icon--PageRemove" aria-hidden="true"></i>
                        }
                    </div>
                    <div class="col-1">
                        @element.Entity.GetType().Name
                    </div>
                    <ContentEditableComponent @bind-Value="@element.Entity.Name"
                                              CSSClass="col-10"
                                              Element="@element"
                                              KeyPress="@(async (ev) => await HandleKeyPressAsync(ev, element.Entity))" />
                    <div class="col-1">

                    </div>
                </div>
                @if (element.NestedList != null)
                {
                    <ListEditor State="element.NestedList" />
                }
            </li>
        }
    </ul>
}